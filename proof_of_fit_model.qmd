---
title: "Endangered Languages: Predicting the degree of endangerment with country-level statistics"
author: "Emmanuel Yeboah"
format: 
  html:
    toc: true
    toc-location: right
    roc-depth: 3
    code-fold: true
---

## Load Relevant Packages

```{r}
#| message: false
library(tidyverse) # for data manipulation
library(rstanarm) # for stan_glm stan_polr models
library(brms)
```


## Read and clean data

```{r}
#| message: false

# read the data from website into R
raw_data_languages <- read_csv('https://raw.githubusercontent.com/mrbalikci/endangered-languages/master/data.csv') |>
  # clean the column names: remove spacing and special characters
  janitor::clean_names() |>
  
  # convert values of all character columns to lower case
  mutate_if(is.character, tolower) |>
  
  # some rows have multiple countries: create new rows for such rows
  separate_rows(countries, country_codes_alpha_3, sep = ',') |>
  separate_rows(iso639_3_codes, sep = ',') |>
  distinct(id, countries, country_codes_alpha_3,iso639_3_codes, .keep_all = TRUE) |>
  
  # Clean up country names: Remove anything at and after '(' symbol in the Name column
  mutate(countries = str_replace_all(countries, "\\s*\\(.*", "")) |>
  
  # remove white-spaces from the values of all character columns
  mutate_if(is.character, str_squish)



raw_data_countries <- read_csv('https://raw.githubusercontent.com/mrbalikci/endangered-languages/master/Countries.csv') |>
  # clean the column names: remove spacing and special characters
  janitor::clean_names()  |>
  
  # convert values of all character columns to lower case
  mutate_if(is.character, tolower) |>
  
  # remove white-spaces from the values of all character columns
  mutate_if(is.character, str_squish)
  
```


```{r}
# to inspect dataset
glimpse(raw_data_languages)
```


```{r}
# to inspect dataset
glimpse(raw_data_countries)
```
## Create final data set

Join the languages data and the country-level statistics data


```{r}
# Combine languages data to countries data
combined_data <- raw_data_languages |>
  left_join(
    raw_data_countries,
    by = c("countries" = "name")
  )

glimpse(combined_data)
```


```{r}
the_levels_of_endangerment = c("vulnerable", 
                               "definitely endangered",
                               "severely endangered",
                               "critically endangered",
                               "extinct")

combined_data <- combined_data |>
  mutate(
    # Creating a numeric version of degree of endangerment
    degree_of_endangerment_numeric = case_when(
      degree_of_endangerment == "vulnerable" ~ 1,
      degree_of_endangerment == "definitely endangered" ~ 2,
      degree_of_endangerment == "severely endangered" ~ 3,
      degree_of_endangerment == "critically endangered" ~ 4,
      degree_of_endangerment == "extinct" ~ 5
    ),
    #creating an ordred factor version of degree of endangerment 
    degree_of_endangerment_factor = factor(degree_of_endangerment,
                                           levels = the_levels_of_endangerment,
                                           ordered = TRUE)
    
  )

glimpse(combined_data)
```

## Build Models

```{r}
covariates <- c(
  # 'gdppc',
  'literacy',
  'infant_mortality',
  'agriculture',
  # 'population',
  'net_migration'
  # ,
  # 'latitude',
  # 'longitude',
  # 'number_of_speakers'
  )
```



### Model A: Predict Numeric Degree of Endangerment

$$
\begin{aligned}
\operatorname{degree\_of\_endangerment\_numeric} &= \alpha + \beta_{1}(\operatorname{literacy}) + \beta_{2}(\operatorname{infant\_mortality}) + \beta_{3}(\operatorname{agriculture})\ + \\
&\quad \beta_{4}(\operatorname{net\_migration}) + \epsilon
\end{aligned}
$$

```{r}
model_formula_numeric <- as.formula(
  paste0(
    'degree_of_endangerment_numeric ~ ', 
    paste0(covariates, collapse = '+')
  )
)

model_formula_numeric
```




```{r}
# Predicting the degree of endangerment as a number
model_numeric <- stan_glm(data = combined_data, 
                    formula = model_formula_numeric, 
                    family = gaussian, 
                    refresh = 0,
                    seed = 9)

model_numeric
```


```{r}
broom.mixed::tidy(model_numeric)
```
$$
\begin{aligned}
\operatorname{\widehat{degree\_of\_endangerment\_numeric}} &= 1.931 + 0.278(\operatorname{literacy}) + 0.008(\operatorname{infant\_mortality})\ + \\
&\quad 0.683(\operatorname{agriculture}) + 0.044(\operatorname{net\_migration})
\end{aligned}
$$



```{r}
plot(model_numeric, "areas", regex_pars = c('literacy', 'agriculture'),
     prob = 0.5, prob_outer = 0.9)
```


```{r}
plot(model_numeric, "areas", regex_pars = c('infant_mortality','net_migration'),
     prob = 0.5, prob_outer = 0.9)
```


### Model B: Predict Probability of Degree of Endangerment


```{r}
model_formula_factor <- as.formula(
  paste0(
    'degree_of_endangerment_factor ~ ', 
    paste0(covariates, collapse = '+')
  )
)

model_formula_factor
```

$$
\begin{aligned}
\log\left[ \frac { P( \operatorname{vulnerable} \geq \operatorname{definitely\ endangered} ) }{ 1 - P( \operatorname{vulnerable} \geq \operatorname{definitely\ endangered} ) } \right] &= \alpha_{1} + \beta_{1}(\operatorname{literacy}) + \beta_{2}(\operatorname{infant\_mortality}) + \beta_{3}(\operatorname{agriculture})\ + \\
&\quad \beta_{4}(\operatorname{net\_migration}) \\
\log\left[ \frac { P( \operatorname{definitely\ endangered} \geq \operatorname{severely\ endangered} ) }{ 1 - P( \operatorname{definitely\ endangered} \geq \operatorname{severely\ endangered} ) } \right] &= \alpha_{2} + \beta_{1}(\operatorname{literacy}) + \beta_{2}(\operatorname{infant\_mortality}) + \beta_{3}(\operatorname{agriculture})\ + \\
&\quad \beta_{4}(\operatorname{net\_migration}) \\
\log\left[ \frac { P( \operatorname{severely\ endangered} \geq \operatorname{critically\ endangered} ) }{ 1 - P( \operatorname{severely\ endangered} \geq \operatorname{critically\ endangered} ) } \right] &= \alpha_{3} + \beta_{1}(\operatorname{literacy}) + \beta_{2}(\operatorname{infant\_mortality}) + \beta_{3}(\operatorname{agriculture})\ + \\
&\quad \beta_{4}(\operatorname{net\_migration}) \\
\log\left[ \frac { P( \operatorname{critically\ endangered} \geq \operatorname{extinct} ) }{ 1 - P( \operatorname{critically\ endangered} \geq \operatorname{extinct} ) } \right] &= \alpha_{4} + \beta_{1}(\operatorname{literacy}) + \beta_{2}(\operatorname{infant\_mortality}) + \beta_{3}(\operatorname{agriculture})\ + \\
&\quad \beta_{4}(\operatorname{net\_migration})
\end{aligned}
$$

```{r}
# Predicting the PROBABILITY of endangerment of each of the degrees of endangerment
model_factor <- stan_polr(data = combined_data, 
                    formula = model_formula_factor, 
                    method = "logistic",
                    prior = R2(0.25),
                    refresh = 0,
                    seed = 9)

model_factor
```


```{r}
broom.mixed::tidy(model_factor)
```



$$
\begin{aligned}
\log\left[ \frac { P( \operatorname{vulnerable} \geq \operatorname{definitely\ endangered} ) }{ 1 - P( \operatorname{vulnerable} \geq \operatorname{definitely\ endangered} ) } \right] &= -0.338 + 0.376(\operatorname{literacy}) + 0.011(\operatorname{infant\_mortality})\ + \\
&\quad 1.063(\operatorname{agriculture}) + 0.064(\operatorname{net\_migration}) \\
\log\left[ \frac { P( \operatorname{definitely\ endangered} \geq \operatorname{severely\ endangered} ) }{ 1 - P( \operatorname{definitely\ endangered} \geq \operatorname{severely\ endangered} ) } \right] &= 1.059 + 0.376(\operatorname{literacy}) + 0.011(\operatorname{infant\_mortality})\ + \\
&\quad 1.063(\operatorname{agriculture}) + 0.064(\operatorname{net\_migration}) \\
\log\left[ \frac { P( \operatorname{severely\ endangered} \geq \operatorname{critically\ endangered} ) }{ 1 - P( \operatorname{severely\ endangered} \geq \operatorname{critically\ endangered} ) } \right] &= 1.908 + 0.376(\operatorname{literacy}) + 0.011(\operatorname{infant\_mortality})\ + \\
&\quad 1.063(\operatorname{agriculture}) + 0.064(\operatorname{net\_migration}) \\
\log\left[ \frac { P( \operatorname{critically\ endangered} \geq \operatorname{extinct} ) }{ 1 - P( \operatorname{critically\ endangered} \geq \operatorname{extinct} ) } \right] &= 3.4412 + 0.376(\operatorname{literacy}) + 0.011(\operatorname{infant\_mortality})\ + \\
&\quad 1.063(\operatorname{agriculture}) + 0.064(\operatorname{net\_migration})
\end{aligned}
$$


```{r}
#| echo: false
#| eval: false
# Predicting the PROBABILITY of endangerment of each of the degrees of endangerment
# model_factor <- stan_polr(data = combined_data, 
#                     formula = model_formula_factor, 
#                     method = "probit",
#                     prior = R2(0.25), #prior_counts = dirichlet(1),
#                     refresh = 0,
#                     seed = 9)
```



```{r}
plot(model_factor, "areas", regex_pars = c('literacy', 'agriculture'),
     prob = 0.5, prob_outer = 0.9)
```


```{r}
plot(model_factor, "areas", regex_pars = c('infant_mortality','net_migration'),
     prob = 0.5, prob_outer = 0.9)
```




